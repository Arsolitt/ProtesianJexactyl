version: "3.8"

networks:
  panel:
volumes:
  database:
    driver: local
  redis:
    driver: local

services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    image: ${PROJECT_NAME}_nginx
    container_name: ${PROJECT_NAME}_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HOST_PORT}:80"
    volumes:
      - "./panel:/var/www/panel"
    depends_on:
      - php
      - database
      - redis
    networks:
      - panel

  database:
    image: mariadb:11.2.2-jammy
    container_name: ${PROJECT_NAME}_database
    restart: unless-stopped
    stdin_open: true
    tty: true
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "database:/var/lib/mysql"
      - "./database/init:/docker-entrypoint-initdb.d"
    networks:
      - panel
    ports:
      - "${DB_PORT}:3306"

  redis:
    image: redis:7.2.3-alpine3.19
    container_name: ${PROJECT_NAME}_redis
    restart: unless-stopped
    stdin_open: true
    tty: true
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - panel
    volumes:
      - "redis:/data"

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
      args:
        UID: 1000
        GID: 1000
    restart: unless-stopped
    stdin_open: true
    tty: true
    image: ${PROJECT_NAME}_php
    container_name: ${PROJECT_NAME}_php
    volumes:
      - "./panel:/var/www/panel"
    networks:
      - panel

  composer:
    build:
      context: .
      dockerfile: composer/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    stdin_open: true
    tty: true
    image: ${PROJECT_NAME}_composer
    container_name: ${PROJECT_NAME}_composer
    volumes:
      - "./panel:/home/app"
    networks:
      - panel
  node:
    build:
      context: .
      dockerfile: node/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    image: ${PROJECT_NAME}_node
    container_name: ${PROJECT_NAME}_node
    stdin_open: true
    tty: true
    volumes:
      - "./panel:/home/app"
    networks:
      - panel
